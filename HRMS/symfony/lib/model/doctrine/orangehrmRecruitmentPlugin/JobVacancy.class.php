<?php

/**
 * JobVacancy
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    orangehrm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class JobVacancy extends PluginJobVacancy {
    const ACTIVE = 1;
    const CLOSED = 2;
    const PUBLISHED = 1;
    const NOT_PUBLISHED = 0;
    const NUMBER_OF_RECORDS_PER_PAGE = 10;
    const SHOW_MICRORESUME = 1;
    const DONOT_SHOW_MICRORESUME = 0;
    const IS_URGENT_VACANCY = 1;
    const IS_NOT_URGENT_VACANCY = 0;
    const TYPE = "VACANCY";

    public function getHiringManagerName() {
        $employee = $this->getEmployee();
        $firstAndLastName = $employee->getFirstAndLastNames();
        $hmName = ($this->getHiringManagerId() != "") ? $firstAndLastName : "";
        return $hmName;
    }

    public function getHiringManagerFullName() {
        $employee = $this->getEmployee();
        $firstAndLastName = $employee->getFirstAndLastNames();
        $hmName = ($this->getHiringManagerId() != "") ? $firstAndLastName : "";
        return $hmName;
    }
    
    public function getHiringManager() {
	    $employee = $this->getEmployee();
	    return $employee;
    }

    public function getStateLabel() {
        $stateName = "";
        if ($this->status == JobVacancy::ACTIVE) {
            $stateName = __("Active");
        } elseif ($this->status == JobVacancy::CLOSED) {
            $stateName = __("Closed");
        }
        return $stateName;
    }

    public function getVacancyName() {
        return (($this->status == JobVacancy::CLOSED) ? $this->getName() . " (Closed)" : $this->getName());
    }

    public function getJobTitleName(){
        return $this->getJobTitle()->getJobTitleName();
    }
    
    
    public function getNumberOfCandidateApplied(){
    	return count($this->getJobCandidateVacancy());
    }
  	   
    public function getAllJobHiringManagers() {    	
	    $jobVacancyHiringManagers = $this->getJobVacancyHiringManager();
	    $hiringManagers = array();
	    foreach ($jobVacancyHiringManagers  as $vacancyHiringManager ) {
		    $hiringManagers[]= $vacancyHiringManager->getEmployee();
	    }
	    return $hiringManagers;
    }
    
    public function getJobHiringManagers() {
	    $jobVacancyHiringManagers = $this->getJobVacancyHiringManager();
	    $hmName = '';
	    foreach ($jobVacancyHiringManagers  as $vacancyHiringManager ) {
		    $hmName .= ", ".$vacancyHiringManager->getEmployee()->getFirstAndLastNames();
	    }
	    $hmName = substr($hmName,1,strlen($hmName));
	    return $hmName;
    }
}
